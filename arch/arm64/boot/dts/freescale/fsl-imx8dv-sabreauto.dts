/*
 * Device Tree file for Freescale i.MX8dv sabreauto
 *
 * Copyright (C) 2016, Freescale Semiconductor Inc
 *
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public
 *     License along with this library; if not, write to the Free
 *     Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *     MA 02110-1301 USA
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

/* First 4KB has trampoline code for secondary cores. */
/memreserve/ 0x80000000 0x00010000;

#include "fsl-imx8dv.dtsi"

/ {
	model = "Freescale i.MX8DV Sabreauto";
	compatible = "fsl,imx8dv-sabreauto", "fsl,imx8dv";

	chosen {
		bootargs = "console=ttymxc2,115200 earlycon=imxuart,0x5a080000,115200";
		stdout-path = &uart3;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;
		user {
			label = "debug";
			gpios = <&gpio0 4 0>;
			default-state = "on";
		};
	};
};
&framebuffer0 {
	status = "okay";
};
&framebuffer1 {
	status = "okay";
};
&framebuffer2 {
	status = "okay";
};
&framebuffer3 {
	status = "okay";
};
&imxdpu0 {
	status = "okay";
};
&imxdpu1 {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c0>;
	clock-frequency = <100000>;
	status = "okay";
};

&i2c1 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	clock-frequency = <100000>;
	status = "okay";

	pca9557_a: gpio@18 {
		compatible = "nxp,pca9557";
		reg = <0x18>;
		gpio-controller;
	};

	pca9557_b: gpio@19 {
		compatible = "nxp,pca9557";
		reg = <0x19>;
		gpio-controller;
	};
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	clock-frequency = <100000>;
	status = "okay";
};

&iomuxc {
	imx8dv-sabreauto {

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				SC_P_USDHC0_CLK		0x600004c
				SC_P_USDHC0_CMD		0x600004c
				SC_P_USDHC0_DATA0	0x600004c
				SC_P_USDHC0_DATA1	0x600004c
				SC_P_USDHC0_DATA2	0x600004c
				SC_P_USDHC0_DATA3	0x600004c
				SC_P_USDHC0_DATA4	0x600004c
				SC_P_USDHC0_DATA5	0x600004c
				SC_P_USDHC0_DATA6	0x600004c
				SC_P_USDHC0_DATA7	0x600004c
			>;
		};

		pinctrl_qspi: qspi {
			fsl,pins = <
				SC_P_QSPI0A_DATA0	0x600004c
				SC_P_QSPI0A_DATA1	0x600004c
				SC_P_QSPI0A_DATA2	0x600004c
				SC_P_QSPI0A_DATA3	0x600004c
				SC_P_QSPI0A_DQS		0x600004c
				SC_P_QSPI0A_SCLK	0x600004c
				SC_P_QSPI0A_SS1		0x600004c
				SC_P_QSPI0A_SS0		0x600004c
				SC_P_QSPI0B_DATA0	0x600004c
				SC_P_QSPI0B_DATA1	0x600004c
				SC_P_QSPI0B_DATA2	0x600004c
				SC_P_QSPI0B_DATA3	0x600004c
				SC_P_QSPI0B_DQS		0x600004c
				SC_P_QSPI0B_SCLK	0x600004c
				SC_P_QSPI0B_SS0		0x600004c
			>;
		};

		/*pin flag mux config iso wakeup gp*/
		pinctrl_fec1: fec1grp {
			fsl,pins = <
				SC_P_ENET0_MDC			0x62
				SC_P_ENET0_MDIO			0x62
				SC_P_ENET0_RGMII_TX_CTL		0x62
				SC_P_ENET0_RGMII_TXC		0x62
				SC_P_ENET0_RGMII_TD0		0x62
				SC_P_ENET0_RGMII_TD1		0x62
				SC_P_ENET0_RGMII_TD2		0x62
				SC_P_ENET0_RGMII_TD3		0x62
				SC_P_ENET0_RGMII_RD3		0x00
				SC_P_ENET0_RGMII_RD2		0x00
				SC_P_ENET0_RGMII_RD1		0x00
				SC_P_ENET0_RGMII_RD0		0x00
				SC_P_ENET0_RGMII_RXC		0x00
				SC_P_ENET0_RGMII_RX_CTL		0x00
			>;
		};

		pinctrl_i2c0: i2c0grp {
			fsl,pins = <
				SC_P_LSIO_I2C0_SDA		0x600004c
				SC_P_LSIO_I2C0_SCL		0x600004c
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				SC_P_LSIO_I2C1_SDA		0x600004c
				SC_P_LSIO_I2C1_SCL		0x600004c
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				SC_P_LSIO_I2C2_SDA		0x600004c
				SC_P_LSIO_I2C2_SCL		0x600004c
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				SC_P_USDHC1_DATA2	0x600004C
				SC_P_USDHC1_DATA3	0x600004C
				SC_P_USDHC1_CMD		0x600004C
				SC_P_USDHC1_CLK		0x600004C
				SC_P_USDHC1_DATA0	0x600004C
				SC_P_USDHC1_DATA1	0x600004C
				SC_P_USDHC1_CD_B	0x600004C
				SC_P_USDHC1_WP		0x600004C
				SC_P_USDHC1_LCTRL	0x600004C
				SC_P_USDHC1_RESET_B	0x600004C
				SC_P_USDHC1_VSELECT	0x600004C
			>;
		};

		pinctrl_gpio_leds: gpioledsgrp {
			fsl,pins = <
				SC_P_LSIO_GPIO0_04	0x10
			>;
		};
	};
};

&usdhc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc1>;
	bus-width = <1>;
	non-removable;
	no-1-8-v;
	max-frequency = <25000000>;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	bus-width = <4>;
	no-1-8-v;
	max-frequency = <25000000>;
	status = "okay";
};

&qspi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_qspi>;
	status = "okay";
	ddrsmp=<0>;

	flash0: n25q256a@0 {
                compatible = "micron,n25q256a";
                spi-max-frequency = <29000000>;
                reg = <0>;
        };

        flash1: n25q256a@1 {
                compatible = "micron,n25q256a";
                spi-max-frequency = <29000000>;
                reg = <1>;
        };
};

&usbotg1 {
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&pwm1 {
	status = "okay";
};

&pwm2 {
	status = "okay";
};

&fec1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_fec1>;
    phy-mode = "rgmii";
    status = "okay";

	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
		};

		ethphy1: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
		};
	};
};
